import groovyx.net.http.RESTClient

apply plugin: 'java'
apply plugin: 'maven'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.codehaus.groovy.modules.http-builder:http-builder:0.7'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile group: 'org.rxtx', name: 'rxtx', version: '2.1.7'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.21'
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}


task getKaaLibrary {
    def user = "parham"
    def pass = "Parham13730321"
    def client = new RESTClient('http://' + user + ':' + pass + '@' + 'iot.ceit.aut.ac.ir:58902/')
    def resp = null
    try {
        resp = client.post(path: '/kaaAdmin/rest/api/sdk?sdkProfileId={sdkProfileId}&targetPlatform=JAVA')
    }
    catch (ex) {
        println ex
        println "Kaa Library Get was Failed."
        return
    }

    assert resp.status == 200  // HTTP response code; 404 means not found, etc.
    def sdkWriter = new FileOutputStream("libs/kaa-java-sdk-rpi.jar")
    sdkWriter.newPrintWriter().write(resp.getData())
}

task execute(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    jvmArgs = ["-Djava.library.path=/usr/lib/rxtx:/usr/lib/jni"]
    systemProperty 'gnu.io.rxtx.SerialPorts', '/dev/ttyACM0'
    main = 'Main'

    print jvmArgs
}

